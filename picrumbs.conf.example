; Station Info
[station]
; mycall: callsign-ssid, callsign max 6 chars and ssid must be 0-15
mycall = N0CALL-9

; 1200-baud TNC
[vhf_tnc]
; port: serial port the TNC is attached to
port = /dev/ttyS0
; kissport: for TNCs with multiple ports (first port is 0)
kissport = 0
; baud is serial line rate, not on-air rate
baud = 9600

; 300-baud TNC
[hf_tnc]
enable = false
port = /dev/ttyS2
kissport = 0
baud = 9600

; GPS (using GPSd)
[gps]
enable = true

; Radio Serial Port
[radio]
enable = false
port = /dev/ttyS3
baud = 38400
; model: see the HamLib website to find yours.
model = 122
; retune: set to true to return to the user-set frequency and mode after beaconing
retune = false

; Console Serial Port
[console]
enable = false
port = /dev/ttyS4
baud = 115200

; Raspberry Pi GPIO Settings
[gpio]
enable = false
hf_en_pin = 5
vhf_en_pin = 6
psk_ptt_pin = 7

; Beacon Params:
[beacon]
; compressed: compress beacon to save on-air bandwidth and increase reliability
compressed = false
; symbol table: / or \, see http://wa8lmf.net/aprs/APRS_symbols.htm
symbol_table = /
; symbol: symbol char from table
symbol = -
; comment: keep this short to save on-air bandwidth and increase reliabiltiy
comment = PiCrumbs
; static_rate: seconds between beacons, 0 to use SmartBeaconing
static_rate = 0
; SmartBeaconing params, see http://info.aprs.net/index.php?title=SmartBeaconing
; these defaults should be reasonable for a vehicle based tracker
sb_low_speed = 5
sb_low_rate = 900
sb_high_speed = 60
sb_high_rate = 180
sb_turn_min = 30
sb_turn_time = 15
sb_turn_slope = 255
; temp_file: path to 1-wire temp sensor. leave blank to disable.
temp_file = 
; temp_f: temperature units. false for C, true for F
temp_f = false

[predict]
; PREDICT path, leave blank to disable
path = 

; APRS-IS settings
[aprsis]
enable = false
; server: name or ip address of an aprs-is server that supports http
server = rotate.aprs2.net
; port: http port of this server, usually 8080.
port = 8080
; proxy: http proxy server to use for aprs-is, blank to disable
proxy =
; proxy_port: port number to use for the proxy
proxy_port = 1080
; user: usually the same as mycall
user = N0CALL-9
; pass: aprs-is password for this callsign
pass = -1

; Smart Frequency Hopping:
;
; you can specify multiple [path*] sections here. each will be tried, in order.
; if your station is not repeated by a digi, the next path will be tried.
; only the last path should be used for HF, there are few or no digis on HF.
; the last path (or single path) will not be checked to see if we were repeated.
; you can also specify an internet path, to use with a tethered cell phone, etc.
; if the aprs servers cannot be contacted, we will move on to the next path.

[path1]
; freq: frequency to use for this APRS path, in Hz
freq = 144390000
; mode: mode to use for this path, eg. FM, USB, LSB, PKTFM
mode = FM
; sat: check with PREDICT to see if this satellite is overhead for this path
; leave this blank to disable this check
sat = 
; min_ele: don't bother trying this sat if it isn't above this elevation
min_ele = 0
; proto: 0 for 1200 baud, 1 for 300 baud, 2 for aprs-is, 3 for psk63, 4 to alternate between psk and 300 baud
; this is the only path setting that is required
proto = 0
; retry: try a second time to send a packet on this path if a digi is not heard
retry = true
; via: max of 8, PLEASE Google this subject before changing if you don't fully understand the effects.
; YOU SHOULD NOT USE A PATH ON HF
via = WIDE1-1,WIDE2-1
; holdoff: limit use of this path to at least this interval, in seconds.
holdoff = 10
; comment: if included, this replaces the default beacon comment text for this path only
comment = "2M Path"

[path2]
; aprs-is path
proto = 2

[path3]
; 30m hf 300bd/psk63 path
freq = 10147600
mode = USB
proto = 4
; no comment here, to increase chances of getting through
comment = ""
; See here for PSK63 info: http://wa8lmf.net/APRS_PSK63/
; psk_freq: psk63 audio frequency (in Hz)
psk_freq = 2100
; psk_vol: psk63 volume (percent)
psk_vol = 100
